
name: Run tests

on: [push, pull_request, fork, workflow_dispatch]

jobs:

  run_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]
    env:
      ARANGODB_VER: 3.5.0
      ARANGODB_V: 35
    steps:

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check out GitHub repo
      if: "!contains(github.event.head_commit.message, 'skip ci')"
      uses: actions/checkout@v2
      with:
        fetch-depth: 2  # codecov complains if fetch-depth == 1, which is the default

    - name: Set up test environment
      if: "!contains(github.event.head_commit.message, 'skip ci')"
      shell: bash
      run: |
        python --version
        which python
        export ARANGO_FILE=arangodb3-linux-$ARANGODB_VER.tar.gz
        wget -nv https://download.arangodb.com/arangodb$ARANGODB_V/Community/Linux/$ARANGO_FILE
        tar xfz $ARANGO_FILE

        # TODO move everything except pipenv to Pipfile dev section and change to make test
        pip install pipenv flake8
        pipenv install
        pipenv install --dev coverage pytest-cov
    - name: Run tests
      if: "!contains(github.event.head_commit.message, 'skip ci')"
      shell: bash
      run: |
        # TODO change to make test
        flake8 .
        mkdir arangodata
        export ARANGO=`pwd`/arangodb3-$ARANGODB_VER/bin/arangodb
        export ARANGOD=`pwd`/arangodb3-$ARANGODB_VER/usr/sbin/arangod
        $ARANGO start --server.arangod=$ARANGOD --starter.mode single --starter.data-dir ./arangodata
        PYTHONPATH=$(pwd):$(pwd)/src pipenv run pytest --verbose --cov-report term --cov-report xml:cov.xml --cov=. .
        $ARANGO stop
    - name: Upload coverage
      if: "!contains(github.event.head_commit.message, 'skip ci')"
      shell: bash
      run: |
        # codecov https://docs.codecov.com/docs/codecov-uploader#integrity-checking-the-uploader
        curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
        curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
        gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
        shasum -a 256 -c codecov.SHA256SUM
        chmod +x codecov
        ./codecov -f cov.xml
    
